///////////////////////////////////////////////////////////////////////////// C++ code generated with wxFormBuilder (version Sep 12 2010)// http://www.wxformbuilder.org///// PLEASE DO "NOT" EDIT THIS FILE!///////////////////////////////////////////////////////////////////////////#include "aboxdlggen.h"///////////////////////////////////////////////////////////////////////////AboxDlgGen::AboxDlgGen( wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style ) : wxDialog( parent, id, title, pos, size, style ){	this->SetSizeHints( wxDefaultSize, wxDefaultSize );		wxBoxSizer* bSizer3;	bSizer3 = new wxBoxSizer( wxVERTICAL );		m_FindBox = new wxStaticBoxSizer( new wxStaticBox( this, wxID_ANY, wxT("Find") ), wxVERTICAL );		wxFlexGridSizer* fgSizer1;	fgSizer1 = new wxFlexGridSizer( 0, 2, 0, 0 );	fgSizer1->AddGrowableCol( 1 );	fgSizer1->SetFlexibleDirection( wxBOTH );	fgSizer1->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );		m_Find = new wxButton( this, wxID_ANY, wxT("Find"), wxDefaultPosition, wxDefaultSize, 0 );	fgSizer1->Add( m_Find, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		m_FindText = new wxComboBox( this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0, NULL, 0 ); 	fgSizer1->Add( m_FindText, 0, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 5 );		m_FindBox->Add( fgSizer1, 0, wxEXPAND, 5 );		bSizer3->Add( m_FindBox, 0, wxEXPAND|wxALL, 5 );		m_UploadBox = new wxStaticBoxSizer( new wxStaticBox( this, wxID_ANY, wxT("Upload") ), wxVERTICAL );		wxFlexGridSizer* fgSizer2;	fgSizer2 = new wxFlexGridSizer( 0, 2, 0, 0 );	fgSizer2->AddGrowableCol( 1 );	fgSizer2->SetFlexibleDirection( wxBOTH );	fgSizer2->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );		m_labCategory = new wxStaticText( this, wxID_ANY, wxT("Category"), wxDefaultPosition, wxDefaultSize, 0 );	m_labCategory->Wrap( -1 );	fgSizer2->Add( m_labCategory, 0, wxALIGN_CENTER_VERTICAL|wxALIGN_RIGHT|wxALL, 5 );		m_Category = new wxComboBox( this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0, NULL, 0 ); 	fgSizer2->Add( m_Category, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL|wxALL, 5 );		m_labText = new wxStaticText( this, wxID_ANY, wxT("Text"), wxDefaultPosition, wxDefaultSize, 0 );	m_labText->Wrap( -1 );	fgSizer2->Add( m_labText, 0, wxALIGN_CENTER_VERTICAL|wxALIGN_RIGHT|wxALL, 5 );		m_Text = new wxTextCtrl( this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	fgSizer2->Add( m_Text, 0, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 5 );		m_labFile = new wxStaticText( this, wxID_ANY, wxT("File"), wxDefaultPosition, wxDefaultSize, 0 );	m_labFile->Wrap( -1 );	fgSizer2->Add( m_labFile, 0, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5 );		wxFlexGridSizer* fgSizer3;	fgSizer3 = new wxFlexGridSizer( 0, 3, 0, 0 );	fgSizer3->AddGrowableCol( 0 );	fgSizer3->SetFlexibleDirection( wxBOTH );	fgSizer3->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );		m_Filename = new wxTextCtrl( this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	fgSizer3->Add( m_Filename, 0, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 5 );		m_SelectFile = new wxButton( this, wxID_ANY, wxT("..."), wxDefaultPosition, wxSize( 50,-1 ), 0 );	fgSizer3->Add( m_SelectFile, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		m_Link = new wxCheckBox( this, wxID_ANY, wxT("Link"), wxDefaultPosition, wxDefaultSize, 0 );	m_Link->SetValue(true); 	fgSizer3->Add( m_Link, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		fgSizer2->Add( fgSizer3, 0, wxEXPAND, 5 );		m_UploadBox->Add( fgSizer2, 0, wxEXPAND, 5 );		m_Add = new wxButton( this, wxID_ANY, wxT("Add"), wxDefaultPosition, wxDefaultSize, 0 );	m_UploadBox->Add( m_Add, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		bSizer3->Add( m_UploadBox, 0, wxEXPAND|wxALL, 5 );		m_ResultBox = new wxStaticBoxSizer( new wxStaticBox( this, wxID_ANY, wxT("Result") ), wxVERTICAL );		m_Stubs = new wxListCtrl( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_HRULES|wxLC_REPORT|wxLC_SINGLE_SEL );	m_Stubs->SetMinSize( wxSize( 600,300 ) );		m_ResultBox->Add( m_Stubs, 1, wxEXPAND, 5 );		wxBoxSizer* bSizer2;	bSizer2 = new wxBoxSizer( wxHORIZONTAL );		m_Open = new wxButton( this, wxID_ANY, wxT("Open"), wxDefaultPosition, wxDefaultSize, 0 );	bSizer2->Add( m_Open, 0, wxALL, 5 );		m_Delete = new wxButton( this, wxID_ANY, wxT("Delete"), wxDefaultPosition, wxDefaultSize, 0 );	bSizer2->Add( m_Delete, 0, wxALL, 5 );		m_ResultBox->Add( bSizer2, 0, wxEXPAND, 5 );		bSizer3->Add( m_ResultBox, 1, wxEXPAND|wxALL, 5 );		m_StdButtons = new wxStdDialogButtonSizer();	m_StdButtonsOK = new wxButton( this, wxID_OK );	m_StdButtons->AddButton( m_StdButtonsOK );	m_StdButtonsHelp = new wxButton( this, wxID_HELP );	m_StdButtons->AddButton( m_StdButtonsHelp );	m_StdButtons->Realize();	bSizer3->Add( m_StdButtons, 0, wxEXPAND|wxALL|wxALIGN_RIGHT, 5 );		this->SetSizer( bSizer3 );	this->Layout();	bSizer3->Fit( this );		this->Centre( wxBOTH );		// Connect Events	m_Find->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AboxDlgGen::onFind ), NULL, this );	m_SelectFile->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AboxDlgGen::onSelectFile ), NULL, this );	m_Add->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AboxDlgGen::onAdd ), NULL, this );	m_Stubs->Connect( wxEVT_COMMAND_LIST_COL_CLICK, wxListEventHandler( AboxDlgGen::onStubCol ), NULL, this );	m_Stubs->Connect( wxEVT_COMMAND_LIST_ITEM_ACTIVATED, wxListEventHandler( AboxDlgGen::onStubActivated ), NULL, this );	m_Stubs->Connect( wxEVT_COMMAND_LIST_ITEM_SELECTED, wxListEventHandler( AboxDlgGen::onStubSelected ), NULL, this );	m_Open->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AboxDlgGen::onOpen ), NULL, this );	m_Delete->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AboxDlgGen::onDelete ), NULL, this );	m_StdButtonsHelp->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AboxDlgGen::onHelp ), NULL, this );	m_StdButtonsOK->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AboxDlgGen::onOK ), NULL, this );}AboxDlgGen::~AboxDlgGen(){	// Disconnect Events	m_Find->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AboxDlgGen::onFind ), NULL, this );	m_SelectFile->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AboxDlgGen::onSelectFile ), NULL, this );	m_Add->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AboxDlgGen::onAdd ), NULL, this );	m_Stubs->Disconnect( wxEVT_COMMAND_LIST_COL_CLICK, wxListEventHandler( AboxDlgGen::onStubCol ), NULL, this );	m_Stubs->Disconnect( wxEVT_COMMAND_LIST_ITEM_ACTIVATED, wxListEventHandler( AboxDlgGen::onStubActivated ), NULL, this );	m_Stubs->Disconnect( wxEVT_COMMAND_LIST_ITEM_SELECTED, wxListEventHandler( AboxDlgGen::onStubSelected ), NULL, this );	m_Open->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AboxDlgGen::onOpen ), NULL, this );	m_Delete->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AboxDlgGen::onDelete ), NULL, this );	m_StdButtonsHelp->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AboxDlgGen::onHelp ), NULL, this );	m_StdButtonsOK->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AboxDlgGen::onOK ), NULL, this );	}